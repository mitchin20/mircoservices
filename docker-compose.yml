version: '3.8'
services:
  customer:
    build:
      context: ./customer
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DB_URL=postgres://default:ghnsd20bXwVE@ep-aged-limit-a4qwgnda.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require
    depends_on:
      - postgres

  products:
    build:
      context: ./products
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - DB_URL=postgres://default:ghnsd20bXwVE@ep-aged-limit-a4qwgnda.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require
    depends_on:
      - postgres

  shopping:
    build:
      context: ./shopping
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - PORT=3000
      - DB_URL=postgres://default:ghnsd20bXwVE@ep-aged-limit-a4qwgnda.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: ghnsd20bXwVE
      POSTGRES_DB: verceldb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_insready -U default"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

volumes:
  postgres_data: